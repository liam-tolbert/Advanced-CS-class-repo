1) Every node has a color either red or black.

2) Root of tree is always black.

3) There are no two adjacent red nodes (A red node cannot have a red parent or red child).

4) Every path from root to a NULL node has same number of black nodes

black height: Number of noes on some path from any node to a leaf. Leaf nodes are also counted as black nodes
Every RBT with n nodes has height less than or equal to 2logBASE2(n+1)
https://www.geeksforgeeks.org/red-black-tree-set-1-introduction-2/

A chain of 3 nodes is not possible in Red-Black Trees. 

It is always good to insert a node as red and recolor it accordingly instead of trying to recolor it both ways when inserting it as black. 

Rotations:
Right rotation: In this case, "rotating" 11 down to become the right child of 4. 
It inherits 4's previous right children/subtree as a left child (since 11's right child is already 15, 11's left child space is used)

	11			4
      /   \		      /	 \
    4      15  --------->    1   11
   / \				/  \
  1   9			       9   15
     / \		      / \
    5  10		     5  10 

Left rotation: 